services:
  - type: web
    name: minio-server
    plan: standard
    runtime: docker
    image: minio/minio:latest
    healthCheckPath: /minio/health/live
    dockerCommand: minio server /data --address 0.0.0.0:9000 --console-address 0.0.0.0:9001
    disk:
      name: minio-data
      mountPath: /data
      sizeGB: 20
    envVars:
      - key: MINIO_ROOT_USER
        generateValue: true
      - key: MINIO_ROOT_PASSWORD
        generateValue: true

  - type: web
    name: minio-console
    plan: starter
    runtime: docker
    dockerContext: /
    dockerfilePath: ./docker/minio-console.Dockerfile
    envVars:
      - key: PORT
        value: 10000
      - key: MINIO_HOST
        fromService:
          name: minio-server
          type: web
          property: host
      - key: MINIO_CONSOLE_PORT
        value: 9001

  - type: web
    name: ragflow-web
    plan: pro
    runtime: docker
    dockerfilePath: Dockerfile
    numInstances: 1
    healthCheckPath: /health
    healthCheckTimeoutSeconds: 20
    healthCheckIntervalSeconds: 10
    healthCheckHealthyThreshold: 3
    healthCheckUnhealthyThreshold: 3
    disk:
      name: docstore
      mountPath: /ragflow/storage
      sizeGB: 20
    envVars:
      - key: RENDER
        value: "true"
      - key: PORT
        value: 10000
      - key: DOC_ENGINE
        value: "elasticsearch"
      - key: DOC_STORE_ROOT
        value: /ragflow/storage
      - key: ELASTICSEARCH_URL
        value: "http://elasticsearch:9200"
      - key: ELASTICSEARCH_USERNAME
        value: elastic
      - key: ELASTICSEARCH_PASSWORD
        sync: false  # Set via Render dashboard
      - key: S3_ENDPOINT
        value: http://minio-server:9000
      - key: S3_CONSOLE_ENDPOINT
        value: https://${RENDER_SERVICE_NAME}-minio-console.onrender.com
      - key: AWS_ACCESS_KEY_ID
        fromService:
          type: pserv
          name: ragflow-minio
          envVarKey: MINIO_ROOT_USER
      - key: AWS_SECRET_ACCESS_KEY
        fromService:
          type: pserv
          name: ragflow-minio
          envVarKey: MINIO_ROOT_PASSWORD
      - fromService:
          type: redis
          name: ragflow-redis
          property: connectionString
          key: REDIS_URL

  - type: worker
    name: task-executor
    plan: pro
    runtime: docker
    numInstances: 1
    disk:
      name: docstore
      mountPath: /ragflow/storage
      sizeGB: 20
    envVars:
      - key: RENDER
        value: "true"
      - key: S3_ENDPOINT
        fromService:
          type: pserv
          name: ragflow-minio
          property: hostPort
      - key: AWS_ACCESS_KEY_ID
        fromService:
          type: pserv
          name: ragflow-minio
          envVarKey: MINIO_ROOT_USER
      - key: AWS_SECRET_ACCESS_KEY
        fromService:
          type: pserv
          name: ragflow-minio
          envVarKey: MINIO_ROOT_PASSWORD
      - fromService:
          type: redis
          name: ragflow-redis
          property: connectionString
          key: REDIS_URL
      - fromService:
          type: postgres
          name: ragflow-db
          property: connectionString
          key: DATABASE_URL

  - type: redis
    name: ragflow-redis
    plan: standard
    region: oregon
    ipAllowList:
      - source: 0.0.0.0/0
        description: "Allow all Render services"
    maxmemoryPolicy: allkeys-lru

databases:
  - name: ragflow-db
    plan: basic-4gb
    postgresMajorVersion: "16"
    databaseName: ragflow_prod
    user: ragflow_admin
    region: oregon
    diskSizeGB: 20
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere
